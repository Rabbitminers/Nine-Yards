/* tslint:disable */
/* eslint-disable */
/**
 * Nine Yards REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: rabbitminers@zohomail.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectMember
 */
export interface ProjectMember {
    /**
     * Whether the user has accepted the project's invitation
     * @type {boolean}
     * @memberof ProjectMember
     */
    accepted: boolean;
    /**
     * 
     * @type {string}
     * @memberof ProjectMember
     */
    id: string;
    /**
     * The user's permissions
     * @type {number}
     * @memberof ProjectMember
     */
    permissions: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectMember
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectMember
     */
    userId: string;
}

/**
 * Check if a given object implements the ProjectMember interface.
 */
export function instanceOfProjectMember(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accepted" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "permissions" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function ProjectMemberFromJSON(json: any): ProjectMember {
    return ProjectMemberFromJSONTyped(json, false);
}

export function ProjectMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectMember {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accepted': json['accepted'],
        'id': json['id'],
        'permissions': json['permissions'],
        'projectId': json['project_id'],
        'userId': json['user_id'],
    };
}

export function ProjectMemberToJSON(value?: ProjectMember | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accepted': value.accepted,
        'id': value.id,
        'permissions': value.permissions,
        'project_id': value.projectId,
        'user_id': value.userId,
    };
}

