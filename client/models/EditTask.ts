/* tslint:disable */
/* eslint-disable */
/**
 * Nine Yards REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: rabbitminers@zohomail.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditTask
 */
export interface EditTask {
    /**
     * The tasks new accent colour (hex) used in
     * the progress bar colour on tasks as well
     * as other places.
     * @type {string}
     * @memberof EditTask
     */
    accentColour?: string | null;
    /**
     * The updated due date, must be in the future
     * @type {Date}
     * @memberof EditTask
     */
    due?: Date | null;
    /**
     * The updated task description
     * @type {string}
     * @memberof EditTask
     */
    information?: string | null;
    /**
     * The updated task name
     * @type {string}
     * @memberof EditTask
     */
    name?: string | null;
    /**
     * The tasks new position, if this is higher
     * than the highest currently filled position
     * then it will be lowered to the current
     * heighest
     * @type {number}
     * @memberof EditTask
     */
    position?: number | null;
    /**
     * The tasks new primary colour (hex) used in
     * the background colour on tasks as well as
     * other places
     * @type {string}
     * @memberof EditTask
     */
    primaryColour?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EditTask
     */
    taskGroup?: string | null;
}

/**
 * Check if a given object implements the EditTask interface.
 */
export function instanceOfEditTask(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EditTaskFromJSON(json: any): EditTask {
    return EditTaskFromJSONTyped(json, false);
}

export function EditTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accentColour': !exists(json, 'accent_colour') ? undefined : json['accent_colour'],
        'due': !exists(json, 'due') ? undefined : (json['due'] === null ? null : new Date(json['due'])),
        'information': !exists(json, 'information') ? undefined : json['information'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'primaryColour': !exists(json, 'primary_colour') ? undefined : json['primary_colour'],
        'taskGroup': !exists(json, 'task_group') ? undefined : json['task_group'],
    };
}

export function EditTaskToJSON(value?: EditTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accent_colour': value.accentColour,
        'due': value.due === undefined ? undefined : (value.due === null ? null : value.due.toISOString()),
        'information': value.information,
        'name': value.name,
        'position': value.position,
        'primary_colour': value.primaryColour,
        'task_group': value.taskGroup,
    };
}

